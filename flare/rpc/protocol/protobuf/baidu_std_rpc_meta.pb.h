// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flare/rpc/protocol/protobuf/baidu_std_rpc_meta.proto

#ifndef PROTOBUF_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto__INCLUDED
#define PROTOBUF_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace brpc {
class RpcMeta;
class RpcMetaDefaultTypeInternal;
extern RpcMetaDefaultTypeInternal _RpcMeta_default_instance_;
class RpcRequestMeta;
class RpcRequestMetaDefaultTypeInternal;
extern RpcRequestMetaDefaultTypeInternal _RpcRequestMeta_default_instance_;
class RpcResponseMeta;
class RpcResponseMetaDefaultTypeInternal;
extern RpcResponseMetaDefaultTypeInternal _RpcResponseMeta_default_instance_;
}  // namespace brpc

namespace brpc {

namespace protobuf_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto

enum CompressType {
  COMPRESS_TYPE_NO_COMPRESSION = 0,
  COMPRESS_TYPE_SNAPPY = 1,
  COMPRESS_TYPE_GZIP = 2
};
bool CompressType_IsValid(int value);
const CompressType CompressType_MIN = COMPRESS_TYPE_NO_COMPRESSION;
const CompressType CompressType_MAX = COMPRESS_TYPE_GZIP;
const int CompressType_ARRAYSIZE = CompressType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompressType_descriptor();
inline const ::std::string& CompressType_Name(CompressType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompressType_descriptor(), value);
}
inline bool CompressType_Parse(
    const ::std::string& name, CompressType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompressType>(
    CompressType_descriptor(), name, value);
}
// ===================================================================

class RpcMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.RpcMeta) */ {
 public:
  RpcMeta();
  virtual ~RpcMeta();

  RpcMeta(const RpcMeta& from);

  inline RpcMeta& operator=(const RpcMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcMeta(RpcMeta&& from) noexcept
    : RpcMeta() {
    *this = ::std::move(from);
  }

  inline RpcMeta& operator=(RpcMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcMeta& default_instance();

  static inline const RpcMeta* internal_default_instance() {
    return reinterpret_cast<const RpcMeta*>(
               &_RpcMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RpcMeta* other);
  friend void swap(RpcMeta& a, RpcMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcMeta& from);
  void MergeFrom(const RpcMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes authentication_data = 7;
  bool has_authentication_data() const;
  void clear_authentication_data();
  static const int kAuthenticationDataFieldNumber = 7;
  const ::std::string& authentication_data() const;
  void set_authentication_data(const ::std::string& value);
  #if LANG_CXX11
  void set_authentication_data(::std::string&& value);
  #endif
  void set_authentication_data(const char* value);
  void set_authentication_data(const void* value, size_t size);
  ::std::string* mutable_authentication_data();
  ::std::string* release_authentication_data();
  void set_allocated_authentication_data(::std::string* authentication_data);

  // optional .brpc.RpcRequestMeta request = 1;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  const ::brpc::RpcRequestMeta& request() const;
  ::brpc::RpcRequestMeta* mutable_request();
  ::brpc::RpcRequestMeta* release_request();
  void set_allocated_request(::brpc::RpcRequestMeta* request);

  // optional .brpc.RpcResponseMeta response = 2;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::brpc::RpcResponseMeta& response() const;
  ::brpc::RpcResponseMeta* mutable_response();
  ::brpc::RpcResponseMeta* release_response();
  void set_allocated_response(::brpc::RpcResponseMeta* response);

  // optional int64 correlation_id = 4;
  bool has_correlation_id() const;
  void clear_correlation_id();
  static const int kCorrelationIdFieldNumber = 4;
  ::google::protobuf::int64 correlation_id() const;
  void set_correlation_id(::google::protobuf::int64 value);

  // optional int32 compress_type = 3;
  bool has_compress_type() const;
  void clear_compress_type();
  static const int kCompressTypeFieldNumber = 3;
  ::google::protobuf::int32 compress_type() const;
  void set_compress_type(::google::protobuf::int32 value);

  // optional int32 attachment_size = 5;
  bool has_attachment_size() const;
  void clear_attachment_size();
  static const int kAttachmentSizeFieldNumber = 5;
  ::google::protobuf::int32 attachment_size() const;
  void set_attachment_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:brpc.RpcMeta)
 private:
  void set_has_request();
  void clear_has_request();
  void set_has_response();
  void clear_has_response();
  void set_has_compress_type();
  void clear_has_compress_type();
  void set_has_correlation_id();
  void clear_has_correlation_id();
  void set_has_attachment_size();
  void clear_has_attachment_size();
  void set_has_authentication_data();
  void clear_has_authentication_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr authentication_data_;
  ::brpc::RpcRequestMeta* request_;
  ::brpc::RpcResponseMeta* response_;
  ::google::protobuf::int64 correlation_id_;
  ::google::protobuf::int32 compress_type_;
  ::google::protobuf::int32 attachment_size_;
  friend struct protobuf_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcRequestMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.RpcRequestMeta) */ {
 public:
  RpcRequestMeta();
  virtual ~RpcRequestMeta();

  RpcRequestMeta(const RpcRequestMeta& from);

  inline RpcRequestMeta& operator=(const RpcRequestMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcRequestMeta(RpcRequestMeta&& from) noexcept
    : RpcRequestMeta() {
    *this = ::std::move(from);
  }

  inline RpcRequestMeta& operator=(RpcRequestMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcRequestMeta& default_instance();

  static inline const RpcRequestMeta* internal_default_instance() {
    return reinterpret_cast<const RpcRequestMeta*>(
               &_RpcRequestMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RpcRequestMeta* other);
  friend void swap(RpcRequestMeta& a, RpcRequestMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcRequestMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcRequestMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcRequestMeta& from);
  void MergeFrom(const RpcRequestMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcRequestMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string service_name = 1;
  bool has_service_name() const;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  #if LANG_CXX11
  void set_service_name(::std::string&& value);
  #endif
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // required string method_name = 2;
  bool has_method_name() const;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // optional int64 log_id = 3;
  bool has_log_id() const;
  void clear_log_id();
  static const int kLogIdFieldNumber = 3;
  ::google::protobuf::int64 log_id() const;
  void set_log_id(::google::protobuf::int64 value);

  // optional int64 trace_id = 4;
  bool has_trace_id() const;
  void clear_trace_id();
  static const int kTraceIdFieldNumber = 4;
  ::google::protobuf::int64 trace_id() const;
  void set_trace_id(::google::protobuf::int64 value);

  // optional int64 span_id = 5;
  bool has_span_id() const;
  void clear_span_id();
  static const int kSpanIdFieldNumber = 5;
  ::google::protobuf::int64 span_id() const;
  void set_span_id(::google::protobuf::int64 value);

  // optional int64 parent_span_id = 6;
  bool has_parent_span_id() const;
  void clear_parent_span_id();
  static const int kParentSpanIdFieldNumber = 6;
  ::google::protobuf::int64 parent_span_id() const;
  void set_parent_span_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:brpc.RpcRequestMeta)
 private:
  void set_has_service_name();
  void clear_has_service_name();
  void set_has_method_name();
  void clear_has_method_name();
  void set_has_log_id();
  void clear_has_log_id();
  void set_has_trace_id();
  void clear_has_trace_id();
  void set_has_span_id();
  void clear_has_span_id();
  void set_has_parent_span_id();
  void clear_has_parent_span_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::google::protobuf::int64 log_id_;
  ::google::protobuf::int64 trace_id_;
  ::google::protobuf::int64 span_id_;
  ::google::protobuf::int64 parent_span_id_;
  friend struct protobuf_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcResponseMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.RpcResponseMeta) */ {
 public:
  RpcResponseMeta();
  virtual ~RpcResponseMeta();

  RpcResponseMeta(const RpcResponseMeta& from);

  inline RpcResponseMeta& operator=(const RpcResponseMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcResponseMeta(RpcResponseMeta&& from) noexcept
    : RpcResponseMeta() {
    *this = ::std::move(from);
  }

  inline RpcResponseMeta& operator=(RpcResponseMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcResponseMeta& default_instance();

  static inline const RpcResponseMeta* internal_default_instance() {
    return reinterpret_cast<const RpcResponseMeta*>(
               &_RpcResponseMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RpcResponseMeta* other);
  friend void swap(RpcResponseMeta& a, RpcResponseMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcResponseMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcResponseMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcResponseMeta& from);
  void MergeFrom(const RpcResponseMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcResponseMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error_text = 2;
  bool has_error_text() const;
  void clear_error_text();
  static const int kErrorTextFieldNumber = 2;
  const ::std::string& error_text() const;
  void set_error_text(const ::std::string& value);
  #if LANG_CXX11
  void set_error_text(::std::string&& value);
  #endif
  void set_error_text(const char* value);
  void set_error_text(const char* value, size_t size);
  ::std::string* mutable_error_text();
  ::std::string* release_error_text();
  void set_allocated_error_text(::std::string* error_text);

  // optional int32 error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:brpc.RpcResponseMeta)
 private:
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_error_text();
  void clear_has_error_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_text_;
  ::google::protobuf::int32 error_code_;
  friend struct protobuf_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RpcMeta

// optional .brpc.RpcRequestMeta request = 1;
inline bool RpcMeta::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcMeta::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcMeta::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcMeta::clear_request() {
  if (request_ != NULL) request_->::brpc::RpcRequestMeta::Clear();
  clear_has_request();
}
inline const ::brpc::RpcRequestMeta& RpcMeta::request() const {
  const ::brpc::RpcRequestMeta* p = request_;
  // @@protoc_insertion_point(field_get:brpc.RpcMeta.request)
  return p != NULL ? *p : *reinterpret_cast<const ::brpc::RpcRequestMeta*>(
      &::brpc::_RpcRequestMeta_default_instance_);
}
inline ::brpc::RpcRequestMeta* RpcMeta::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::brpc::RpcRequestMeta;
  }
  // @@protoc_insertion_point(field_mutable:brpc.RpcMeta.request)
  return request_;
}
inline ::brpc::RpcRequestMeta* RpcMeta::release_request() {
  // @@protoc_insertion_point(field_release:brpc.RpcMeta.request)
  clear_has_request();
  ::brpc::RpcRequestMeta* temp = request_;
  request_ = NULL;
  return temp;
}
inline void RpcMeta::set_allocated_request(::brpc::RpcRequestMeta* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:brpc.RpcMeta.request)
}

// optional .brpc.RpcResponseMeta response = 2;
inline bool RpcMeta::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RpcMeta::set_has_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RpcMeta::clear_has_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RpcMeta::clear_response() {
  if (response_ != NULL) response_->::brpc::RpcResponseMeta::Clear();
  clear_has_response();
}
inline const ::brpc::RpcResponseMeta& RpcMeta::response() const {
  const ::brpc::RpcResponseMeta* p = response_;
  // @@protoc_insertion_point(field_get:brpc.RpcMeta.response)
  return p != NULL ? *p : *reinterpret_cast<const ::brpc::RpcResponseMeta*>(
      &::brpc::_RpcResponseMeta_default_instance_);
}
inline ::brpc::RpcResponseMeta* RpcMeta::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::brpc::RpcResponseMeta;
  }
  // @@protoc_insertion_point(field_mutable:brpc.RpcMeta.response)
  return response_;
}
inline ::brpc::RpcResponseMeta* RpcMeta::release_response() {
  // @@protoc_insertion_point(field_release:brpc.RpcMeta.response)
  clear_has_response();
  ::brpc::RpcResponseMeta* temp = response_;
  response_ = NULL;
  return temp;
}
inline void RpcMeta::set_allocated_response(::brpc::RpcResponseMeta* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:brpc.RpcMeta.response)
}

// optional int32 compress_type = 3;
inline bool RpcMeta::has_compress_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RpcMeta::set_has_compress_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RpcMeta::clear_has_compress_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RpcMeta::clear_compress_type() {
  compress_type_ = 0;
  clear_has_compress_type();
}
inline ::google::protobuf::int32 RpcMeta::compress_type() const {
  // @@protoc_insertion_point(field_get:brpc.RpcMeta.compress_type)
  return compress_type_;
}
inline void RpcMeta::set_compress_type(::google::protobuf::int32 value) {
  set_has_compress_type();
  compress_type_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcMeta.compress_type)
}

// optional int64 correlation_id = 4;
inline bool RpcMeta::has_correlation_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RpcMeta::set_has_correlation_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RpcMeta::clear_has_correlation_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RpcMeta::clear_correlation_id() {
  correlation_id_ = GOOGLE_LONGLONG(0);
  clear_has_correlation_id();
}
inline ::google::protobuf::int64 RpcMeta::correlation_id() const {
  // @@protoc_insertion_point(field_get:brpc.RpcMeta.correlation_id)
  return correlation_id_;
}
inline void RpcMeta::set_correlation_id(::google::protobuf::int64 value) {
  set_has_correlation_id();
  correlation_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcMeta.correlation_id)
}

// optional int32 attachment_size = 5;
inline bool RpcMeta::has_attachment_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RpcMeta::set_has_attachment_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RpcMeta::clear_has_attachment_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RpcMeta::clear_attachment_size() {
  attachment_size_ = 0;
  clear_has_attachment_size();
}
inline ::google::protobuf::int32 RpcMeta::attachment_size() const {
  // @@protoc_insertion_point(field_get:brpc.RpcMeta.attachment_size)
  return attachment_size_;
}
inline void RpcMeta::set_attachment_size(::google::protobuf::int32 value) {
  set_has_attachment_size();
  attachment_size_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcMeta.attachment_size)
}

// optional bytes authentication_data = 7;
inline bool RpcMeta::has_authentication_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcMeta::set_has_authentication_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcMeta::clear_has_authentication_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcMeta::clear_authentication_data() {
  authentication_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authentication_data();
}
inline const ::std::string& RpcMeta::authentication_data() const {
  // @@protoc_insertion_point(field_get:brpc.RpcMeta.authentication_data)
  return authentication_data_.GetNoArena();
}
inline void RpcMeta::set_authentication_data(const ::std::string& value) {
  set_has_authentication_data();
  authentication_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.RpcMeta.authentication_data)
}
#if LANG_CXX11
inline void RpcMeta::set_authentication_data(::std::string&& value) {
  set_has_authentication_data();
  authentication_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.RpcMeta.authentication_data)
}
#endif
inline void RpcMeta::set_authentication_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authentication_data();
  authentication_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.RpcMeta.authentication_data)
}
inline void RpcMeta::set_authentication_data(const void* value, size_t size) {
  set_has_authentication_data();
  authentication_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.RpcMeta.authentication_data)
}
inline ::std::string* RpcMeta::mutable_authentication_data() {
  set_has_authentication_data();
  // @@protoc_insertion_point(field_mutable:brpc.RpcMeta.authentication_data)
  return authentication_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcMeta::release_authentication_data() {
  // @@protoc_insertion_point(field_release:brpc.RpcMeta.authentication_data)
  clear_has_authentication_data();
  return authentication_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcMeta::set_allocated_authentication_data(::std::string* authentication_data) {
  if (authentication_data != NULL) {
    set_has_authentication_data();
  } else {
    clear_has_authentication_data();
  }
  authentication_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_data);
  // @@protoc_insertion_point(field_set_allocated:brpc.RpcMeta.authentication_data)
}

// -------------------------------------------------------------------

// RpcRequestMeta

// required string service_name = 1;
inline bool RpcRequestMeta::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcRequestMeta::set_has_service_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcRequestMeta::clear_has_service_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcRequestMeta::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_name();
}
inline const ::std::string& RpcRequestMeta::service_name() const {
  // @@protoc_insertion_point(field_get:brpc.RpcRequestMeta.service_name)
  return service_name_.GetNoArena();
}
inline void RpcRequestMeta::set_service_name(const ::std::string& value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.RpcRequestMeta.service_name)
}
#if LANG_CXX11
inline void RpcRequestMeta::set_service_name(::std::string&& value) {
  set_has_service_name();
  service_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.RpcRequestMeta.service_name)
}
#endif
inline void RpcRequestMeta::set_service_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.RpcRequestMeta.service_name)
}
inline void RpcRequestMeta::set_service_name(const char* value, size_t size) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.RpcRequestMeta.service_name)
}
inline ::std::string* RpcRequestMeta::mutable_service_name() {
  set_has_service_name();
  // @@protoc_insertion_point(field_mutable:brpc.RpcRequestMeta.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcRequestMeta::release_service_name() {
  // @@protoc_insertion_point(field_release:brpc.RpcRequestMeta.service_name)
  clear_has_service_name();
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    set_has_service_name();
  } else {
    clear_has_service_name();
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:brpc.RpcRequestMeta.service_name)
}

// required string method_name = 2;
inline bool RpcRequestMeta::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcRequestMeta::set_has_method_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcRequestMeta::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcRequestMeta::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
inline const ::std::string& RpcRequestMeta::method_name() const {
  // @@protoc_insertion_point(field_get:brpc.RpcRequestMeta.method_name)
  return method_name_.GetNoArena();
}
inline void RpcRequestMeta::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.RpcRequestMeta.method_name)
}
#if LANG_CXX11
inline void RpcRequestMeta::set_method_name(::std::string&& value) {
  set_has_method_name();
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.RpcRequestMeta.method_name)
}
#endif
inline void RpcRequestMeta::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.RpcRequestMeta.method_name)
}
inline void RpcRequestMeta::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.RpcRequestMeta.method_name)
}
inline ::std::string* RpcRequestMeta::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:brpc.RpcRequestMeta.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcRequestMeta::release_method_name() {
  // @@protoc_insertion_point(field_release:brpc.RpcRequestMeta.method_name)
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:brpc.RpcRequestMeta.method_name)
}

// optional int64 log_id = 3;
inline bool RpcRequestMeta::has_log_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RpcRequestMeta::set_has_log_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RpcRequestMeta::clear_has_log_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RpcRequestMeta::clear_log_id() {
  log_id_ = GOOGLE_LONGLONG(0);
  clear_has_log_id();
}
inline ::google::protobuf::int64 RpcRequestMeta::log_id() const {
  // @@protoc_insertion_point(field_get:brpc.RpcRequestMeta.log_id)
  return log_id_;
}
inline void RpcRequestMeta::set_log_id(::google::protobuf::int64 value) {
  set_has_log_id();
  log_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcRequestMeta.log_id)
}

// optional int64 trace_id = 4;
inline bool RpcRequestMeta::has_trace_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RpcRequestMeta::set_has_trace_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RpcRequestMeta::clear_has_trace_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RpcRequestMeta::clear_trace_id() {
  trace_id_ = GOOGLE_LONGLONG(0);
  clear_has_trace_id();
}
inline ::google::protobuf::int64 RpcRequestMeta::trace_id() const {
  // @@protoc_insertion_point(field_get:brpc.RpcRequestMeta.trace_id)
  return trace_id_;
}
inline void RpcRequestMeta::set_trace_id(::google::protobuf::int64 value) {
  set_has_trace_id();
  trace_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcRequestMeta.trace_id)
}

// optional int64 span_id = 5;
inline bool RpcRequestMeta::has_span_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RpcRequestMeta::set_has_span_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RpcRequestMeta::clear_has_span_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RpcRequestMeta::clear_span_id() {
  span_id_ = GOOGLE_LONGLONG(0);
  clear_has_span_id();
}
inline ::google::protobuf::int64 RpcRequestMeta::span_id() const {
  // @@protoc_insertion_point(field_get:brpc.RpcRequestMeta.span_id)
  return span_id_;
}
inline void RpcRequestMeta::set_span_id(::google::protobuf::int64 value) {
  set_has_span_id();
  span_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcRequestMeta.span_id)
}

// optional int64 parent_span_id = 6;
inline bool RpcRequestMeta::has_parent_span_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RpcRequestMeta::set_has_parent_span_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RpcRequestMeta::clear_has_parent_span_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RpcRequestMeta::clear_parent_span_id() {
  parent_span_id_ = GOOGLE_LONGLONG(0);
  clear_has_parent_span_id();
}
inline ::google::protobuf::int64 RpcRequestMeta::parent_span_id() const {
  // @@protoc_insertion_point(field_get:brpc.RpcRequestMeta.parent_span_id)
  return parent_span_id_;
}
inline void RpcRequestMeta::set_parent_span_id(::google::protobuf::int64 value) {
  set_has_parent_span_id();
  parent_span_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcRequestMeta.parent_span_id)
}

// -------------------------------------------------------------------

// RpcResponseMeta

// optional int32 error_code = 1;
inline bool RpcResponseMeta::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcResponseMeta::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcResponseMeta::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcResponseMeta::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 RpcResponseMeta::error_code() const {
  // @@protoc_insertion_point(field_get:brpc.RpcResponseMeta.error_code)
  return error_code_;
}
inline void RpcResponseMeta::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:brpc.RpcResponseMeta.error_code)
}

// optional string error_text = 2;
inline bool RpcResponseMeta::has_error_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcResponseMeta::set_has_error_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcResponseMeta::clear_has_error_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcResponseMeta::clear_error_text() {
  error_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_text();
}
inline const ::std::string& RpcResponseMeta::error_text() const {
  // @@protoc_insertion_point(field_get:brpc.RpcResponseMeta.error_text)
  return error_text_.GetNoArena();
}
inline void RpcResponseMeta::set_error_text(const ::std::string& value) {
  set_has_error_text();
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.RpcResponseMeta.error_text)
}
#if LANG_CXX11
inline void RpcResponseMeta::set_error_text(::std::string&& value) {
  set_has_error_text();
  error_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.RpcResponseMeta.error_text)
}
#endif
inline void RpcResponseMeta::set_error_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error_text();
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.RpcResponseMeta.error_text)
}
inline void RpcResponseMeta::set_error_text(const char* value, size_t size) {
  set_has_error_text();
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.RpcResponseMeta.error_text)
}
inline ::std::string* RpcResponseMeta::mutable_error_text() {
  set_has_error_text();
  // @@protoc_insertion_point(field_mutable:brpc.RpcResponseMeta.error_text)
  return error_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcResponseMeta::release_error_text() {
  // @@protoc_insertion_point(field_release:brpc.RpcResponseMeta.error_text)
  clear_has_error_text();
  return error_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcResponseMeta::set_allocated_error_text(::std::string* error_text) {
  if (error_text != NULL) {
    set_has_error_text();
  } else {
    clear_has_error_text();
  }
  error_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_text);
  // @@protoc_insertion_point(field_set_allocated:brpc.RpcResponseMeta.error_text)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace brpc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::brpc::CompressType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::brpc::CompressType>() {
  return ::brpc::CompressType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_flare_2frpc_2fprotocol_2fprotobuf_2fbaidu_5fstd_5frpc_5fmeta_2eproto__INCLUDED
